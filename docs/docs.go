// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag at
// 2020-02-29 13:36:23.621408 +0800 CST m=+0.083921537

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {},
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/api/config": {
            "post": {
                "description": "範例",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "範例"
                ],
                "summary": "範例",
                "parameters": [
                    {
                        "description": "使用者等級",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object",
                            "$ref": "#/definitions/swagger.ConfigRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "回傳設定資料",
                        "schema": {
                            "$ref": "#/definitions/bootstrap.Config"
                        }
                    },
                    "403": {
                        "description": "回傳權限不足",
                        "schema": {
                            "$ref": "#/definitions/response.API"
                        }
                    }
                }
            }
        },
        "/api/hello": {
            "get": {
                "description": "範例",
                "tags": [
                    "範例"
                ],
                "summary": "範例",
                "responses": {
                    "200": {
                        "description": "hello world",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api/seed": {
            "post": {
                "description": "在DB產生資料",
                "tags": [
                    "範例"
                ],
                "summary": "種子",
                "responses": {
                    "200": {
                        "description": "回傳執行狀態",
                        "schema": {
                            "$ref": "#/definitions/response.API"
                        }
                    }
                }
            }
        },
        "/api/suggest": {
            "post": {
                "description": "建議",
                "tags": [
                    "Talk"
                ],
                "summary": "建議",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/errorcode.APIError"
                        }
                    }
                }
            }
        },
        "/api/wf/game": {
            "get": {
                "tags": [
                    "遊戲"
                ],
                "summary": "犯人在跳舞",
                "responses": {
                    "200": {
                        "description": "犯人在跳舞",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "bootstrap.AppConf": {
            "type": "object",
            "properties": {
                "debug": {
                    "description": "開啟Debug模式",
                    "type": "boolean"
                },
                "env": {
                    "description": "專案環境",
                    "type": "string"
                },
                "name": {
                    "description": "專案名稱",
                    "type": "string"
                },
                "salt": {
                    "description": "專案雜湊碼",
                    "type": "string"
                },
                "site": {
                    "description": "專案站別",
                    "type": "string"
                }
            }
        },
        "bootstrap.CacheConf": {
            "type": "object",
            "properties": {
                "db": {
                    "type": "integer"
                },
                "host": {
                    "type": "string"
                },
                "maxConn": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                }
            }
        },
        "bootstrap.CacheList": {
            "type": "object",
            "properties": {
                "defaultMaster": {
                    "type": "object",
                    "$ref": "#/definitions/bootstrap.CacheConf"
                },
                "defaultSlave": {
                    "type": "object",
                    "$ref": "#/definitions/bootstrap.CacheConf"
                }
            }
        },
        "bootstrap.Config": {
            "type": "object",
            "properties": {
                "app": {
                    "type": "object",
                    "$ref": "#/definitions/bootstrap.AppConf"
                },
                "caches": {
                    "type": "object",
                    "$ref": "#/definitions/bootstrap.CacheList"
                },
                "databases": {
                    "type": "object",
                    "$ref": "#/definitions/bootstrap.DatabaseList"
                },
                "log": {
                    "type": "object",
                    "$ref": "#/definitions/bootstrap.LogConf"
                },
                "server": {
                    "type": "object",
                    "$ref": "#/definitions/bootstrap.ServerConf"
                },
                "services": {
                    "type": "object",
                    "$ref": "#/definitions/bootstrap.ServiceList"
                }
            }
        },
        "bootstrap.DatabaseConf": {
            "type": "object",
            "properties": {
                "db": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "maxConn": {
                    "type": "integer"
                },
                "password": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "bootstrap.DatabaseList": {
            "type": "object",
            "properties": {
                "defaultMaster": {
                    "type": "object",
                    "$ref": "#/definitions/bootstrap.DatabaseConf"
                },
                "defaultSlave": {
                    "type": "object",
                    "$ref": "#/definitions/bootstrap.DatabaseConf"
                }
            }
        },
        "bootstrap.LogConf": {
            "type": "object",
            "properties": {
                "mode": {
                    "description": "Log紀錄模式： std, file, std+file",
                    "type": "string"
                },
                "prefix": {
                    "description": "Log前綴",
                    "type": "string"
                }
            }
        },
        "bootstrap.ServerConf": {
            "type": "object",
            "properties": {
                "autoPort": {
                    "description": "啟用自動尋找環境變數:PORT",
                    "type": "boolean"
                },
                "host": {
                    "description": "伺服器的Host",
                    "type": "string"
                },
                "ip": {
                    "description": "伺服器的IP",
                    "type": "string"
                },
                "maxConn": {
                    "description": "最大連線數量",
                    "type": "integer"
                },
                "port": {
                    "description": "伺服器的Port",
                    "type": "string"
                },
                "secure": {
                    "description": "是否要安全憑證",
                    "type": "boolean"
                }
            }
        },
        "bootstrap.ServiceConf": {
            "type": "object",
            "properties": {
                "apikey": {
                    "type": "string"
                },
                "host": {
                    "type": "string"
                },
                "ip": {
                    "type": "string"
                },
                "port": {
                    "type": "string"
                },
                "secure": {
                    "type": "boolean"
                }
            }
        },
        "bootstrap.ServiceList": {
            "type": "object",
            "properties": {
                "google": {
                    "type": "object",
                    "$ref": "#/definitions/bootstrap.ServiceConf"
                }
            }
        },
        "errorcode.APIError": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "integer"
                },
                "error_text": {
                    "type": "string"
                },
                "showLog": {
                    "type": "boolean"
                }
            }
        },
        "response.API": {
            "type": "object",
            "properties": {
                "error_code": {
                    "type": "integer"
                },
                "error_text": {
                    "type": "string"
                },
                "result": {
                    "type": "object"
                }
            }
        },
        "swagger.ConfigRequest": {
            "type": "object",
            "properties": {
                "level": {
                    "description": "使用者階層。 0:會員, 1:管理者, 2:系統管理者",
                    "type": "integer",
                    "example": 0
                }
            }
        }
    }
}`

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "",
	Description: "",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func Init() {
	swag.Register(swag.Name, &s{})
}
