workspace:
  base: /go
  path: src/gola

pipeline:
  # 測試
  test:
    image: golang:1.11-alpine
    commands:
      - apk update
      - apk add gcc g++
      - go fmt $(go list ./... | grep -v /vendor/)
      - go vet $(go list ./... | grep -v /vendor/)
      - go test $(go list ./... | grep -v /vendor/)
      - go build -o tmp
      - rm tmp
      - rm -r .git

  # [模擬]同步檔案到機器上
  scp-qatest:
    group: publish
    image: appleboy/drone-scp
    secrets: [ plugin_host, plugin_port, plugin_username, plugin_password ]
    target: /home/admin/go/src/gola
    source: ./*
    when:
      branch: qatest

  scp-prod:
    group: publish
    image: appleboy/drone-scp
    secrets: [ plugin_host, plugin_port, plugin_username, plugin_password ]
    target: /home/admin/go/src/gola
    source: ./*
    when:
      branch: master

  # ssh 部署
  deploy-qatest:
    image: appleboy/drone-ssh
    group: deploy
    secrets: [ plugin_host, plugin_port, plugin_username, plugin_password ]
    command_timeout: 300
    script:
      - cd /home/admin/go/src/gola
      - export APP_ENV=qatest PORT=8001
      - docker-compose up -d --build web
      - docker image prune -f
    when:
      branch: qatest

  deploy-prod:
    image: appleboy/drone-ssh
    group: deploy
    secrets: [ plugin_host, plugin_port, plugin_username, plugin_password ]
    command_timeout: 300
    script:
      - cd /home/admin/go/src/gola
      - export APP_ENV=prod PORT=80
      - docker-compose up -d --build web
      - docker image prune -f
    when:
      branch: master

  # 通知發佈成功與否
  notify-qatest:
    group: notify
    image: appleboy/drone-telegram
    # 必須指定要使用哪個secrets，會自動映射到環境變數
    # 請自行到 Drone 的頁面上，加入 Secret 的變數
    secrets: [ plugin_token, plugin_to ]
    # 若不想設定 Secret，可註解第39行，打開下面兩行，並改成自己的資料 (41,42)
    # token: [TELEGRAM_BOT_TOKEN]
    # to: [USER_ID or GROUP_ID]
    format: markdown
    # 請參照說明：http://plugins.drone.io/appleboy/drone-telegram/
    message: >
      !!! 測試環境 !!!
      No. {{build.number}};
      專案『{{repo.name}}』; 分支『[{{commit.branch}}]({{commit.link}})』
      提交訊息：{{commit.message}}
      {{#success build.status}}
      編譯測試正常，已發佈
      {{else}}
      編譯測試失敗，請修正
      {{/success}}
      ; {{build.link}}
    # 有 when 的話，即使上面失敗了，也會執行這個步驟
    when:
      branch: qatest
      status: [ success, failure ]

  notify-prod:
    group: notify
    image: appleboy/drone-telegram
    # 必須指定要使用哪個secrets，會自動映射到環境變數
    # 請自行到 Drone 的頁面上，加入 Secret 的變數
    secrets: [ plugin_token, plugin_to ]
    # 若不想設定 Secret，可註解第39行，打開下面兩行，並改成自己的資料 (41,42)
    # token: [TELEGRAM_BOT_TOKEN]
    # to: [USER_ID or GROUP_ID]
    format: markdown
    # 請參照說明：http://plugins.drone.io/appleboy/drone-telegram/
    message: >
      !!! 正式環境 !!!
      No. {{build.number}};
      專案『{{repo.name}}』; 分支『[{{commit.branch}}]({{commit.link}})』
      提交訊息：{{commit.message}}
      {{#success build.status}}
      編譯測試正常，已發佈
      {{else}}
      編譯測試失敗，請修正
      {{/success}}
      ; {{build.link}}
    # 有 when 的話，即使上面失敗了，也會執行這個步驟
    when:
      status: [ success, failure ]
      branch: master
